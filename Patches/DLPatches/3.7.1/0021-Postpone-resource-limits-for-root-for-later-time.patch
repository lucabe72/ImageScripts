From ec847773f5758f1c9e1b853877938a037d28ea66 Mon Sep 17 00:00:00 2001
From: Juri Lelli <juri.lelli@gmail.com>
Date: Thu, 26 Apr 2012 10:55:43 +0200
Subject: [PATCH 21/48] Postpone resource limits for !root for later time.

To avoid security problems and to discuss more which is the best
way to provide resource limits to normal users, let's postpone
this after the basic functionalities will be merged.
---
 include/asm-generic/resource.h      |    2 --
 include/uapi/asm-generic/resource.h |    5 +----
 kernel/sched/core.c                 |   25 -------------------------
 3 files changed, 1 insertion(+), 31 deletions(-)

diff --git a/include/asm-generic/resource.h b/include/asm-generic/resource.h
index 40d4a61..b63ac0f 100644
--- a/include/asm-generic/resource.h
+++ b/include/asm-generic/resource.h
@@ -24,8 +24,6 @@
 	[RLIMIT_NICE]		= { 0, 0 },				\
 	[RLIMIT_RTPRIO]		= { 0, 0 },				\
 	[RLIMIT_RTTIME]		= {  RLIM_INFINITY,  RLIM_INFINITY },	\
-	[RLIMIT_DLDLINE]	= { ULONG_MAX, ULONG_MAX },		\
-	[RLIMIT_DLRTIME]	= { 0, 0 },				\
 }
 
 #endif
diff --git a/include/uapi/asm-generic/resource.h b/include/uapi/asm-generic/resource.h
index 9edc8fa..f863428 100644
--- a/include/uapi/asm-generic/resource.h
+++ b/include/uapi/asm-generic/resource.h
@@ -45,10 +45,7 @@
 					   0-39 for nice level 19 .. -20 */
 #define RLIMIT_RTPRIO		14	/* maximum realtime priority */
 #define RLIMIT_RTTIME		15	/* timeout for RT tasks in us */
-
-#define RLIMIT_DLDLINE		16	/* minimum deadline in us */
-#define RLIMIT_DLRTIME		17	/* maximum runtime in us */
-#define RLIM_NLIMITS		18
+#define RLIM_NLIMITS		16
 
 /*
  * SuS says limits have to be unsigned.
diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index 415eeb5..26c20c0 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -3948,31 +3948,6 @@ recheck:
 	 * Allow unprivileged RT tasks to decrease priority:
 	 */
 	if (user && !capable(CAP_SYS_NICE)) {
-		if (dl_policy(policy)) {
-			u64 rlim_dline, rlim_rtime;
-			u64 dline, rtime;
-
-			if (!lock_task_sighand(p, &flags))
-				return -ESRCH;
-			rlim_dline = p->signal->rlim[RLIMIT_DLDLINE].rlim_cur;
-			rlim_rtime = p->signal->rlim[RLIMIT_DLRTIME].rlim_cur;
-			unlock_task_sighand(p, &flags);
-
-			/* can't set/change -deadline policy */
-			if (policy != p->policy && !rlim_rtime)
-				return -EPERM;
-
-			/* can't decrease the deadline */
-			rlim_dline *= NSEC_PER_USEC;
-			dline = param->sched_deadline;
-			if (dline < p->dl.dl_deadline && dline < rlim_dline)
-				return -EPERM;
-			/* can't increase the runtime */
-			rlim_rtime *= NSEC_PER_USEC;
-			rtime = param->sched_runtime;
-			if (rtime > p->dl.dl_runtime && rtime > rlim_rtime)
-				return -EPERM;
-		}
 		if (rt_policy(policy)) {
 			unsigned long rlim_rtprio =
 					task_rlimit(p, RLIMIT_RTPRIO);
-- 
1.7.9.5

